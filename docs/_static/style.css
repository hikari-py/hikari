@import url('https://fonts.googleapis.com/css?family=Baloo+2|Roboto&display=swap');
@import url('https://cdn.jsdelivr.net/gh/tonsky/FiraCode@1.207/distr/fira_code.css');

/*
 * Copyright Â© Nekoka.tt 2019-2020
 *
 * This file is part of Hikari.
 *
 * Hikari is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Hikari is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Hikari. If not, see <https://www.gnu.org/licenses/>.
 */


/**************************** dark theme ****************************/

body {
    background-color: #222;
    color: #f8f9fa;
    padding-top: 0 !important;
    font-family: 'Roboto', sans-serif;
}

.xref {
    background-color: #272822 !important;
    font-weight: lighter;
}

.go {
    color: #999 !important;
}

.c1 {
    color: #aa3344 !important;
    background-color: transparent !important;
}

/* whyyyyy */
code, .literal, .literal > span.pre, .highlight {
    color: #F92672 !important;
    background-color: #272822;
    border-color: transparent !important;
}

.highlight {
    /* bootstrap.css:5011 */
    border-radius: 4px !important;
}

pre {
    background-color: transparent !important;
    border-color: transparent !important;
}

dl.field-list > dt {
    padding-left: 0 !important;
    word-break: normal !important;
}

dt:target, span.highlighted {
    background-color: transparent !important;
    text-decoration: underline;
    text-decoration-color: #F92672;
}

input[type="text"] {
    background-color: #555;
    color: #fff;
    border-color: #333 !important;
    border-radius: 3px;
}

form.navbar-form {
    padding: 0 !important;
}

.alert {
    border-color: transparent !important;
}

.alert-info {
    background-color: #505050;
    color: #d9edf7;
}

.alert-warning {
    background-color: #f8d7da;
    color: #721c24;
}

.viewcode-link, .headerlink {
    color: #66D9EF;
}

.reference {
    color: #F92672 !important;
}

.external {
    color: #F92672 !important
}

nav, .alert, .admonition {
    background-image: none !important;
}

.navbar {
    background-image: none !important;
    background-color: #303030 !important;
    border-color: transparent !important;
    position: relative !important;
}

/*************************** layout fixes ***************************/

h1, h2, h3, h4, h5, h6, .navbar-brand, .navbar-text .navbar-version {
    word-wrap: break-word;
    font-family: 'Baloo 2', cursive;
}

h1 {
    font-size: 2.5em;
}

h2 {
    font-size: 2em;
}

h3 {
    font-size: 1.5em;
}

h4 {
    font-size: 1.3em;
}

/*
 * Apparently if it is too thin in width on display: block, it makes the html
 * element not fit the window, and then the text just flows off the viewport,
 * making the viewport only 2/3 of the screen and looking ridiculous. If we use
 * flex, it mediates this but then on large devices the viewport snaps rather
 * than being responsive.
 */

html {
    display: flex !important;
}

@media screen and (min-width: 430px){
    html {
        display: block !important;
    }    
}

/*
 * Make body fill the viewport always
 */
body {
    position: relative;
    font-size: 1.7em;
    min-height: 100vh;
    height: 100%;
}

.body {
    width: 100% !important;
}

div.body {
    max-width: 100% !important;
}


body > div.container {
    min-height: -webkit-fill-available;
}

/*
 * Make the footer sticky to the bottom of the body.
 */
html {
    min-height: 100vh !important;
}


@media screen and (min-width: 600px){
    div.navbar {
        position: sticky !important;
    }

    div.container-fluid.navbar-inverse.navbar-expand-lg, div.navbar {
        min-height: auto;
        position: fixed;
        box-sizing: border-box;
        width: 100%;
        z-index: 9999999999999;
    }

    div.container-fluid.navbar-inverse.navbar-expand-lg {
        bottom: -10px;
    }
}

.nav a {
    font-weight: bold;
}

#navbar.container {
    margin-left: 1em;
    margin-right: 1em;
}

.navbar-text {
    /* bootswatch bugfix for version not aligning with logo i guess */
    line-height: 21px;
}

#navbar {
    border-radius: 0px !important;
}

.navbar a, .footer a {
    color: #ccc !important;
}

.navbar a:hover, .footer a:active {
    color: #fff !important;
}

.dropdown-menu {
    background-color: #555 !important;
}

.dropdown-menu>li>a:focus, .dropdown-menu>li>a:hover {
    background-color: #666 !important;
    background-image: none !important;
}

.divider {
    background-color: #333 !important;
}

.dropdown-menu .caption {
    padding-left: 1em;
}

footer:before {
    margin-bottom: 1em;
}

footer.footer {
    margin-top: 1em;
    margin-bottom: 1em;
    font-weight: bold;
    border: 0;
    color: white;
}

code {
    font-family: 'Fira Code', monospace !important;
    font-feature-settings: "calt" 1 !important;
    font-variant-ligatures: contextual !important;
}

.highlight {
    font-family: 'Fira Code', monospace !important;
    font-feature-settings: "calt" 1 !important;
    font-variant-ligatures: contextual !important;
}

.pre {
    font-family: 'Fira Code', monospace !important;
    font-feature-settings: "calt" 1 !important;
    font-variant-ligatures: contextual !important;
}

@supports (font-variation-settings: normal) {
    code { font-family: 'Fira Code VF', monospace; }
    .highlight { font-family: 'Fira Code VF', monospace; }
    pre { font-family: 'Fira Code VF', monospace; }
}

.navbar-brand, h1, h2, h3, h4, h5, h6, .navbar-text .navbar-version {
    font-family: 'Baloo 2', cursive;
}

dl {
    margin-top: 0em;
    margin-bottom: 0em;
}

dl.class {
    margin-top: 4em !important;
    margin-bottom: 4em !important;
    line-height: 2em;
}

dl > dd {
    margin-left: 4em;
}

.sig-name.descname {
    font-size: inherit !important;
}

p {
    line-height: 2em;
}

a {
    color: #F92672 !important;
}

/*
 * I cant get this to hide, Sphinx is a pain in the arse, so might as well just hide the element...
 * this hides an erroneous default value for attrs usage.
 */
dl.attribute > dt > em.property {
    display: none;
}

/*
 * Fixes alignment voodoo for type names.
 */
a.reference > code {
    padding-top: 0;
    padding-bottom: 0;
}
