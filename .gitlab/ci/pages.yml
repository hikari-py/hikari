# Copyright (c) 2020 Nekokatt
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

.pages:
  artifacts:
    expire_in: 1 day
    paths:
      - public/
  before_script:
    - apt-get install git -qy
    - >
      git log -n 1 "${CI_COMMIT_SHA}" --format="%B" \
          | grep -iqE "\[\s*(skip|no|don'?t|do\s+not)\s+pages?\s*\]" \
         && echo "SKIPPING ${CI_JOB_STAGE} STAGE JOB" \
         && exit 0
    - mkdir public || true
  extends: .cpython
  stage: report

pages:pdoc3:
  extends:
    - .pages
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event'"
    - if: "$CI_COMMIT_REF_NAME != 'master'"
    - if: "$CI_PIPELINE_SOURCE == 'push' || $CI_PIPELINE_SOURCE == 'web'"
  script:
    - pip install nox
    - nox --sessions pdoc --no-error-on-external-run

pages:
  artifacts:
    expire_in: 2 days
    paths:
      - public/
  extends: .cpython
  needs:
    - test:results
    - pages:pdoc3
  rules:
    - if: "$CI_COMMIT_REF_NAME == 'staging'"
  script:
    - pip install nox
    - nox --sessions pages --no-error-on-external-run
    - ls public -R
  stage: deploy
