name: CI

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  test:
    strategy:
      # Allows for matrix sub-jobs to fail without canceling the rest
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]
        python-version: [3.8, 3.9, 3.10-dev]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup python
        if: ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Test Installation
        run: |
          pip install wheel

          pip install -e .
          pip uninstall -y hikari

          pip install -e .[speedups]
          pip uninstall -y hikari

      - name: Run tests
        run: |
          pip install nox
          nox -s pytest
          nox -s pytest-speedups -- --cov-append

          mv .coverage .coverage.${{ matrix.os }}.${{ matrix.python-version }}

      - name: Upload coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: .coverage.${{ matrix.os }}.${{ matrix.python-version }}
          retention-days: 1
          if-no-files-found: error


  upload-coverage:
    needs: [test]
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8

      - name: Download coverage
        uses: actions/download-artifact@v2
        with:
          name: coverage

      - name: Combine coverage
        run: |
          pip install coverage
          coverage combine
          coverage xml -i

      - name: Upload to codeclimate
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter after-build --id "d40e64ea0ff74713f79365fea4378ab51a2141ad4fcf0fb118496bbf560d4192"

  linting:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8

      - name: Linting
        run: |
          pip install nox
          nox -s safety mypy flake8

  twemoji:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8

      - name: Test twemoji mapping
        run: |
          pip install nox
          nox -s twemoji-test

  pages:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8

      - name: Setup node
        uses: actions/setup-node@v2.1.5

      - name: Build pages
        run: |
          pip install nox
          nox -s pages

      - name: Upload artifacts
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v2
        with:
          name: pages
          path: public
          retention-days: 2
          if-no-files-found: error

  deploy:
    # Only run on releases and if everything passes
    if: github.event_name == 'release'
    needs: [upload-coverage, linting, twemoji, pages]

    runs-on: ubuntu-20.04

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      GITHUB_TAG: ${{ github.event.release.tag_name }}
      GITHUB_REPO_SLUG: ${{ github.repository }}
      GITHUB_BUILD_NUMBER: ${{ github.run_number }}
      DEPLOY_WEBHOOK_URL: ${{ secrets.DEPLOY_WEBHOOK_URL }}
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8

      - name: Deploy
        run: bash scripts/deploy.sh
