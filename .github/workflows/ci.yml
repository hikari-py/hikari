name: CI

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  test:
    strategy:
      # Allows for matrix sub-jobs to fail without canceling the rest
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]
        python-version: [3.8, 3.9, 3.10.0-alpha.4]
        image: [null]
        include:
          - os: ubuntu-20.04
            python-version: null
            image: davfsa/stackless-python-hikari:3.8.0b3

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.image }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup python
        if: ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run tests
        run: |
          pip install nox
          nox -s pytest
          nox -s pytest-speedups -- --cov-append

      - name: Upload report
        if: ${{ matrix.os == 'ubuntu-20.04' && matrix.python-version == '3.8' }}
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter after-build \
          --exit-code 0 \
          --id "d40e64ea0ff74713f79365fea4378ab51a2141ad4fcf0fb118496bbf560d4192"

  linting:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Linting
        run: |
          pip install nox
          nox -s safety mypy flake8

  twemoji:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Test twemoji mapping
        run: |
          pip install nox
          nox -s twemoji-test

  pages:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Setup node
        uses: actions/setup-node@v1

      - name: Build pages
        run: |
          pip install nox
          nox -s pages

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pages
          path: public
          retention-days: 2

  deploy:
    # Only run on releases and if everything passes
    if: github.event.release.published
    needs: [test, linting, twemoji, pages]

    runs-on: ubuntu-20.04

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      GITHUB_TAG: ${{ github.event.release.tag_name }}
      GITHUB_REPO_SLUG: ${{ github.repository }}
      GITHUB_BUILD_NUMBER: ${{ github.run_number }}
      DEPLOY_WEBHOOK_URL: ${{ secrets.DEPLOY_WEBHOOK_URL }}
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Deploy
        run: bash scripts/deploy.sh
