name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      # Allows for matrix sub-jobs to fail without cancelling the rest
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.9, "3.10", 3.11, 3.12, 3.13.5]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup uv
        uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: true
          # TODO(https://github.com/astral-sh/setup-uv/issues/226): Remove this.
          prune-cache: ${{ matrix.os != 'windows-latest' }}

      - name: Test Installation
        shell: bash
        run: |
          uv pip install .
          uv pip uninstall hikari

          uv pip install .[speedups]
          uv pip uninstall hikari

      - name: Run tests
        shell: bash
        run: |
          uv sync --frozen --only-group nox

          nox -s pytest -- --coverage
          nox -s pytest-all-features -- --coverage --cov-append

          python scripts/ci/normalize_coverage.py

      - name: Upload coverage
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: .coverage.${{ matrix.os }}.${{ matrix.python-version }}
          path: .coverage
          retention-days: 1
          if-no-files-found: error
          include-hidden-files: true

  upload-coverage:
    needs: [test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup uv
        uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
        with:
          python-version: "3.10"
          activate-environment: true

      - name: Download coverage
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: coverages/
          # Not specifying any name will lead to the download of all available artifacts

      # Since artifacts v2, we can no longer upload multiple artifacts
      # with the same name and have them re-download as if it were a directory.
      # For this reason, we need to download all available artifacts, filter
      # out for only coverage files and then place them in the root directory
      # with the name of the artifact
      - name: Extract individual coverage files
        run: |
          cd coverages

          for coverage_dir in ./.coverage.*; do
              mv "$coverage_dir/.coverage" "../$coverage_dir"
              rmdir "$coverage_dir"
          done

          cd ..

      - name: Combine coverage
        run: |
          uv sync --frozen --only-group coverage

          coverage combine
          coverage xml
          coverage report

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@fdcc8476540edceab3de004e990f80d881c6cc00 # v5.5.0

  linting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup uv
        uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
        with:
          python-version: "3.10"
          activate-environment: true

      - name: Install nox
        run: |
          uv sync --frozen --only-group nox

      - name: Check stubs
        if: always() && !cancelled()
        run: |
          nox -s generate-stubs
          if [ "$(git status --short)" ]; then
            echo "Stubs were not updated accordingly to the changes. Please run 'nox -s generate-stubs' and commit the changes to fix this."
            exit 1
          fi

      - name: Audit
        if: always() && !cancelled()
        run: |
          nox -s audit

      - name: Mypy
        if: always() && !cancelled()
        run: |
          nox -s mypy

      - name: Verify types
        if: always() && !cancelled()
        run: |
          nox -s verify-types

      - name: Ruff
        if: always() && !cancelled()
        run: |
          nox -s ruff -- --output-format=github

      - name: Slotscheck
        if: always() && !cancelled()
        run: |
          nox -s slotscheck

      - name: Codespell
        if: always() && !cancelled()
        run: |
          nox -s codespell

      - name: Check trailing whitespaces
        if: always() && !cancelled()
        run: |
          nox -s check-trailing-whitespaces

  twemoji:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup uv
        uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
        with:
          python-version: 3.9
          activate-environment: true

      - name: Test twemoji mapping
        run: |
          uv sync --frozen --only-group nox

          nox -s twemoji-test

  docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup uv
        uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0
        with:
          # NOTE: This should be kept up to date with .readthedocs.yaml
          python-version: 3.11
          activate-environment: true

      - name: Build documentation
        run: |
          uv sync --frozen --only-group nox
          nox -s mkdocs

      - name: Upload artifacts
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: docs
          path: public/docs
          retention-days: 2
          if-no-files-found: error

  # Allows us to add this as a required check in Github branch rules, as all the other jobs are subject to change
  ci-done:
    needs: [upload-coverage, linting, twemoji, docs]
    if: always() && !cancelled()

    runs-on: ubuntu-latest

    steps:
      - name: Set status based on required jobs
        env:
          RESULTS: ${{ join(needs.*.result, ' ') }}
        run: |
          for result in $RESULTS; do
            if [ "$result" != "success" ]; then
              exit 1
            fi
          done
