# Copyright Â© Nekoka.tt 2019
#
# This file is part of Hikari.
#
# Hikari is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Hikari is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Hikari. If not, see <https://www.gnu.org/licenses/>.

stages:
    - deploy
    - test

variables:
    DOCKER_DRIVER: "overlay2"
    RUN_SLOW_TESTS: "true"
    OWNER: "nekokatt"
    # gitlab.com/nekokatt/hikari trigger token
    HIKARI_TRIGGER_TOKEN: secure
    # To push to gitlab on master
    GIT_SSH_PRIVATE_KEY: secure

cache:
    paths:
        - .nox/
        - .pytest_cache/
        - poetry.lock

# Fixes a bug where CI now won't verify a branch before merging it and instead does nothing until the heat death of
# the universe or something.
.merge_request_testing: &merge_request_testing
    only:
        - branches
        - merge_requests
        - tags
        - schedules

###
### TEMPLATE TO RUN NOX AND SETUP.PY TESTS
###
.test:
    <<: *merge_request_testing
    allow_failure: false
    stage: test
    script:
        - python -V
        - apk add git gcc g++ make
        - pip install poetry nox virtualenv
        - mkdir public || true
        # Run the pipelines.
        - echo -e "\e[1;33mRUNNING TEST PIPELINES\e[0m"
        - poetry install
        - poetry show -v
        - poetry run nox -sinit
        - poetry run nox -spytest
        - poetry run nox -sbandit
        - poetry run nox -spypitest
        - poetry run nox -spylint || true
    artifacts:
        paths:
            - public

###
### TEST IN PYTHON 3.7
###
py37:
    image: python:3.7-alpine
    extends: .test
    coverage: /^TOTAL[\s\d%]+\s(\d+(?:\.\d+)?\%)$/

###
### TEST IN PYTHON 3.8
###
py38:
    image: python:3.8-rc-alpine
    extends: .test


###
### TEMPLATE FOR TEST AND PROD DOCUMENTATION GENERATION JOBS.
###
pages:
    stage: deploy
    allow_failure: false
    image: python:3-stretch
    before_script:
        - apt-get update
        - apt-get install graphviz -y
        - pip install nox
    script:
        - nox -ssphinx
    artifacts:
        paths:
            - public
    only:
        - master
    except:
        - schedules

###
### HANDLE DEPLOYING TO PYPI REPOSITORIES
###
.deploy:
    allow_failure: false
    stage: deploy
    image: python:3
    before_script:
        - apt-get update
        - apt-get install curl git openssh-client -y
        - pip install poetry requests
        - poetry install -v
        - poetry show -v
    script:
        - source tasks/deploy.sh
        - do-deployment

###
### HANDLE DEPLOYING TO OUR STAGING ENVIRONMENT ON test.pypi.org
###
deploy-to-staging:
    extends: .deploy
    only:
        - staging
        - $CI_PROJECT_NAMESPACE == $OWNER
    except:
        - tags
        - merge_requests
        - schedules
    variables:
        RELEASE_WEBHOOK_NAME: "staging"
        RELEASE_WEBHOOK_DESCRIPTION: "You can install this version by running:\n```bash\npip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple hikari.core\n```\n"
        RELEASE_WEBHOOK_COLOUR: "0xd34615"
    environment:
        name:
            staging
    artifacts:
        paths:
            - docs

###
### HANDLE DEPLOYING TO OUR PRODUCTION ENVIRONMENT ON pypi.org
###
deploy-to-prod:
    extends: .deploy
    only:
        - master
        - $CI_PROJECT_NAMESPACE == $OWNER
    except:
        - tags
        - merge_requests
        - schedules
    variables:
        RELEASE_WEBHOOK_NAME: "prod"
        RELEASE_WEBHOOK_DESCRIPTION: "Install it with:\n```bash\npip install hikari.core\n```\n"
        RELEASE_WEBHOOK_COLOUR: "0x5c2040"
    environment:
        name:
            prod
    artifacts:
        paths:
            - docs
